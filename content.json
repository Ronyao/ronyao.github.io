{"pages":[],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/02/15/hello-world/"},{"title":"markdown常用语法","text":"Markdown是一种文本格式，以简单的语法结构来对文章内容进行排版，显示效果简洁美观，适用起来也不复杂，是在网上编辑内容的好工具，一下介绍常见的几个语法，目前也是适用频率最高的几个语法点，记住之后基本满足写作需求。 一、标题标题前面加#号，井号与字体间有一个空格距离，#号数量代表几级标题。如下：123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 显示效果如下： 一级标题二级标题三级标题四级标题五级标题六级标题 二、列表分两种情况，无序列表与有序列表。无序列表使用 *、-、和 + 作为列表标记；有序列表则使用数字加英文句点 . 来表示。如下：1234567891011121314151617/* 无序列表 */* 北京 * 海淀区 * 五道口- 上海 - 黄浦区 - 外滩+ 广州 + 广州 + 广州/* 有序列表 */1. 北京2. 上海3. 广州 显示效果如下： 北京 海淀区 五道口 上海 黄浦区 外滩 广州 广州 广州 北京 上海 广州 三、代码区块分行内代码和代码框两种情况。行内代码就是用两个 ` (反引号)把需要添加行内代码的区域包起来；代码框就是用两个 ` ` ` (三反引号)把需要添加行内代码的区域包起来。如下所示：1234567` ` `public class HelloWorld { public static void main(String[] args){ System.out.println(&quot;Hello World!&quot;); }}` ` ` 显示效果： 12345public class HelloWorld { public static void main(String[] args){ System.out.println(&quot;Hello World!&quot;); }} 四、图片和链接图片与超链接基本相似，又一个方括号与括号组成，显示图片在首加叹号，方括号里面显示名称，圆括号里写地址与title。12345678910111213/* 图片链接 */![图片alt](图片地址 &quot;图片title&quot;)![blockchain](https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=702257389,1274025419&amp;fm=27&amp;gp=0.jpg &quot;区块链&quot;)/* 超链接 */[超链接名](超链接地址 &quot;超链接title&quot;)title可加可不加[百度](http://baidu.com) 显示效果： 百度 五、表格表格用|分隔开，居中格式需要在第二行进行设置，同时分割表头和内容。-有一个就行，为了对齐，多加了几个文字默认居左；-两边加：表示文字居中；-右边加：表示文字居右。1234表头|表头|表头-|:-:|-:内容|内容|内容内容|内容|内容 显示效果： 表头 表头 表头 内容 内容 内容 内容 内容 内容 六、其他字体加粗的文字左右分别用两个*号包起来；倾斜的文字左右分别用一个*号包起来；倾斜和加粗的文字左右分别用三个*号包起来;删除线的文字左右分别用两个~~号包起来。1234**这是加粗的文字***这是倾斜的文字*`***这是斜体加粗的文字***~~这是加删除线的文字~~ 显示效果: 这是加粗的文字这是倾斜的文字这是斜体加粗的文字这是加删除线的文字 引用在引用的文字前加&gt;即可。12&gt;这是引用的内容&gt;&gt;这是引用的内容 显示效果： 这是引用的内容 这是引用的内容 分割线三个或者三个以上的 - 或者 * 都可以。1234-------******** 显示效果： 总结一开始使用markdown的时候容易忘了用什么符号，所以接下来简单说一下符号的使用：注：*,+,-使用效果经常一样，特别是在列表，分割线，所以我统一直接用-，因为减号在键盘上容易打出来。标题用#号，无序列，分割线表用-，有序列表用数字加.，代码用`反引号，方括号与圆括号处理链接和图片，表格用|。","link":"/2019/03/15/markdown常用语法/"},{"title":"jvm学习","text":"java虚拟机的学习相当于一个工具，jvm结构jvm回收算法及收集器jvm优化eclipse运行调优 前两个算原理 后两个介绍工具和实战 热点探测对频繁加载的class文件直接编译成代码，相当于缓存，把常用的 jvm 有两个端口client/server server拥有的内存更多 jvm 总体结构图 类加载子系统 方法区 常量池java堆 java实例 （重点）直接内存 直接映射到物理内存，不受java堆控制，NIO 垃圾回收系统 （重点）对方法区、java堆和直接内存进行垃圾回收 java栈 每一个Java虚拟机线程都有同一个有的java栈 本地方法栈 本地方法就是操作系统的方法，api PC寄存器 执行引擎 jit just in time java堆内部又分新生代，老年代、永久代。这是为了提高内存分配和垃圾回收的效率。分代垃圾回收 新生代分三块 Eden 和 两个较小的 survivor 空间，比例 8：1：1survivor区相当于给要分配到老年区的做担保与整理老年代 永久代（不需要过多的了解，以后可能会消失） 垃圾回收常见算法1引用计数 无法处理循环引用2复制 示例survivor区，用于整理内存3标记清除 最古老的算法，此算法需要暂停整个应用，同时，会产生内存碎片4标记整理 算法3+算法2 垃圾收集器就是对垃圾回收算法的实现，jvm中垃圾收集器scavengeGC（次收集）对新生代的eden收集fullGC （全收集）对老年代区的收集 hotspot 收集器分两大类 新生代和老年代 分代垃圾收集器 新生代收集器串行收集器 Serial -Xx+UseSerialGC 单线程，执行时其他工作必须停止 优化方向选择jvm版本堆区垃圾收集器的选择 并行收集器 ParNew缩短收集时间 Parrallel Scavenge 0","link":"/2019/03/06/jvm学习/"}],"tags":[{"name":"jvm","slug":"jvm","link":"/tags/jvm/"}],"categories":[{"name":"java","slug":"java","link":"/categories/java/"}]}